[0] 准备工作：
交叉编译依赖库libpng：
tar xf libpng-1.6.34.tar.xz 
cd libpng-1.6.34/
CC=arm-linux-gcc \
CXX=arm-linux-g++ \
./configure --prefix=/opt/toolchains/stbgcc-4.8-1.4/arm-linux-gnueabihf \
--build=i386-linux --host=arm-linux --target=arm-linux 
make && make install

交叉编译依赖库dbus：
dbus:  http://dbus.freedesktop.org/releases/dbus/
tar xf dbus-1.10.24.tar.gz 
cd dbus-1.10.24/
CC=arm-linux-gcc \
CXX=arm-linux-g++ \
./configure --prefix=/opt/toolchains/stbgcc-4.8-1.4/arm-linux-gnueabihf \
--build=i386-linux --host=arm-linux --target=arm-linux --disable-tests
make && make install

交叉编译依赖库fontconfig：
下载：https://www.freedesktop.org/software/fontconfig/release/fontconfig-2.11.94.tar.gz
然后：
tar xf fontconfig-2.11.94.tar.gz 
cd fontconfig-2.11.94/
./configure --prefix=/opt/toolchains/stbgcc-4.8-1.4/arm-linux-gnueabihf \
--build=i386-linux --host=arm-linux --target=arm-linux

交叉编译依赖库expat：
expat: http://sourceforge.net/projects/expat/
tar xf expat-2.2.5.tar.bz2
cd expat-2.2.5/
CC=arm-linux-gcc \
CXX=arm-linux-g++ \
./configure --prefix=/opt/toolchains/stbgcc-4.8-1.4/arm-linux-gnueabihf \
--build=i386-linux --host=arm-linux --target=arm-linux 
make && make install  

[1] 创建并修改配置文件：
cd qtbase/mkspecs/devices/
cp -rf linux-mipsel-broadcom-97425-g++/ linux-mipsel-broadcom-97252-g++/
修改其中的qmake.conf ：
	diff linux-mipsel-broadcom-97425-g++/qmake.conf  linux-mipsel-broadcom-97252-g++/qmake.conf 
	2c2
	< # qmake configuration for linux-mipsel-broadcom-97425-g++
	---
	> # qmake configuration for linux-mipsel-broadcom-97252-g++
	26c26,27
	< CROSS_COMPILE           = mipsel-linux-
	---
	> #CROSS_COMPILE           = mipsel-linux-
	> CROSS_COMPILE           = arm-linux-
	42c43
	< BRCM_PLATFORM           = 97425
	---
	> BRCM_PLATFORM           = 97252
	50,52c51,55
	< QMAKE_INCDIR_OPENGL_ES2 = $${BRCM_ROCKFORD_PATH}/middleware/v3d/interface/khronos/include
	< QMAKE_LIBDIR_OPENGL_ES2 = $${BRCM_ROCKFORD_PATH}/middleware/v3d/lib_$${BRCM_PLATFORM}_$${BRCM_BUILD_TYPE}
	< QMAKE_LIBS_OPENGL_ES2   = -lv3ddriver -lrt
	---
	> #QMAKE_INCDIR_OPENGL_ES2 = $${BRCM_ROCKFORD_PATH}/middleware/v3d/interface/khronos/include
	> #QMAKE_LIBDIR_OPENGL_ES2 = $${BRCM_ROCKFORD_PATH}/middleware/v3d/lib_$${BRCM_PLATFORM}_$${BRCM_BUILD_TYPE}
	> QMAKE_INCDIR_OPENGL_ES2 = $${BRCM_ROCKFORD_PATH}/middleware/v3d/driver/interface/khronos/include/
	> QMAKE_LIBDIR_OPENGL_ES2 = $${BRCM_ROCKFORD_PATH}/middleware/v3d/driver/interface/khronos/lib
	> QMAKE_LIBS_OPENGL_ES2   = -lpthread -lv3ddriver -lrt -lnxpl
	61c64
	< DIRECTFB_PLATFORM_HOOKS_SOURCES = $$PWD/qdirectfbeglhooks_bcm97425.cpp
	---
	> DIRECTFB_PLATFORM_HOOKS_SOURCES = $$PWD/qdirectfbeglhooks_bcm97252.cpp
创建目录：
mkdir qtbase/mkspecs/devices/linux-mipsel-broadcom-97252-g++/rockford
mkdir qtbase/mkspecs/devices/linux-mipsel-broadcom-97252-g++/applibs

[2] 为了添加opengl支持，操作如下：
将Y:\nexus_7252\rockford\目录中的所有文件，复制到：
Y:\b-20g\qt-everywhere-opensource-src-5.9.3\qtbase\mkspecs\devices\linux-mipsel-broadcom-97252-g++\rockford\
创建目录：
Y:\b-20g\qt-everywhere-opensource-src-5.9.3\qtbase\mkspecs\devices\linux-mipsel-broadcom-97252-g++\rockford\middleware\v3d\driver\interface\khronos\lib
在这个目录里放入：libv3ddriver.so，libnxpl.so，libnexus.so几个库文件。
上面三个库文件的生成方法请参考：
nexus_7252\nexus\docs\OpenGL_ES_QuickStart.pdf

[3] 配置Qt：
export PKG_CONFIG_LIBDIR=/opt/toolchains/stbgcc-4.8-1.4/arm-linux-gnueabihf/lib/pkgconfig
export PKG_CONFIG_SYSROOT_DIR=/
./configure -prefix  /qt-5.9.3 \
-confirm-license -opensource \
-xplatform devices/linux-mipsel-broadcom-97252-g++ \
-no-openssl -nomake examples -nomake tools -nomake tests \
-device-option B_REFSW_DEBUG=n \
-device-option BRCM_ROCKFORD_PATH="$PWD"/qtbase/mkspecs/devices/linux-mipsel-broadcom-97252-g++/rockford \
-device-option BRCM_APPLIBS_PATH="$PWD"/qtbase/mkspecs/devices/linux-mipsel-broadcom-97252-g++/applibs \
-sysroot /opt/toolchains/stbgcc-4.8-1.4/arm-linux-gnueabihf/sys-root
注：如果要重新运行configure脚本修改Qt的配置，那么首先要删除config.cache这个文件：
（You don't need to unpack it again, just delete the config.cache file）

[4] 编译Qt：
make -j4
如果上面的make -j4编译过程中报错，可以再次执行make，不使用-j4选项，那么错误可能就消失了。

[5] 可能出现的错误与解决方法
出现错误：
ERROR at //BUILD.gn:74:1: Can't load input file.
Project ERROR: GN build error!
只要执行：
cd qtwebengine
/home/zw/b-20g/qt-everywhere-opensource-src-5.9.3/qtbase/bin/qmake -r
问题就可消失。

出现错误：
../../3rdparty/chromium/dbus/message.h:8:23: fatal error: dbus/dbus.h: No such file or directory
执行：
mkdir -p qtwebengine/src/3rdparty/chromium/opt/toolchains/stbgcc-4.8-1.4/arm-linux-gnueabihf/include/
ln -s /opt/toolchains/stbgcc-4.8-1.4/arm-linux-gnueabihf/include/dbus-1.0/ qtwebengine/src/3rdparty/chromium/opt/toolchains/stbgcc-4.8-1.4/arm-linux-gnueabihf/include/dbus-1.0
mkdir -p qtwebengine/src/3rdparty/chromium/opt/toolchains/stbgcc-4.8-1.4/arm-linux-gnueabihf/lib
ln -s /opt/toolchains/stbgcc-4.8-1.4/arm-linux-gnueabihf/lib/dbus-1.0/ qtwebengine/src/3rdparty/chromium/opt/toolchains/stbgcc-4.8-1.4/arm-linux-gnueabihf/lib/dbus-1.0

出现错误：
/opt/toolchains/stbgcc-4.8-1.4/arm-linux-gnueabihf/include/ft2build.h:56:38: fatal error: freetype/config/ftheader.h: No such file or directory
解决方法：
ln -s /opt/toolchains/stbgcc-4.8-1.4/arm-linux-gnueabihf/include/freetype2/  qtwebengine/src/3rdparty/chromium/opt/toolchains/stbgcc-4.8-1.4/arm-linux-gnueabihf/include/freetype2

如果出现错误：
ImportError: No module named mako.template
则执行：
sudo apt-get install python-mako

#error You must enable NEON instructions (e.g. -mfloat-abi=softfp -mfpu=neon) to use arm_neon.h
解决方法：
vi qtwebengine/src/3rdparty/chromium/third_party/opus/BUILD.gn
在其中添加use_opus_rtcd = false，如下：
use_opus_rtcd = current_cpu == "arm" && (is_win || is_android || is_linux)
use_opus_rtcd = false
注意：这个很可能影响WebRTC的正常使用。
          
出现错误：
../../3rdparty/chromium/ui/gfx/codec/jpeg_codec.cc:124:10: error: invalid conversion from ‘int’ to ‘boolean’ [-fpermissive]
解决如下：
vi qtwebengine/src/3rdparty/chromium/ui/gfx/BUILD.gn
在其中修改cflags，添加cflags = [ "-fpermissive" ]：
  # Linux.
  if (is_linux) {
    deps += [ "//build/linux:fontconfig" ]
    cflags = [ "-fpermissive" ]
  }

出现错误：
../../3rdparty/chromium/ui/gfx/codec/jpeg_codec.cc:363:10: error: cannot convert ‘bool’ to ‘boolean’ in return
../../3rdparty/chromium/ui/gfx/codec/jpeg_codec.cc:491:36: error: cannot convert ‘bool’ to ‘boolean’ for argument ‘2’ to ‘int jpeg_read_header(j_decompress_ptr, boolean)’
解决方法：
vi qtwebengine/src/3rdparty/chromium/ui/gfx/codec/jpeg_codec.cc
修改如下：
boolean FillInputBuffer(j_decompress_ptr cinfo) {
  return (boolean)false;
}
// fill the file metadata into our buffer
if (jpeg_read_header(&cinfo, (boolean)true) != JPEG_HEADER_OK)
return false;

编译过程中卡住，虚拟机卡死（不能响应鼠标按键操作），最后一条打印信息如下：
[7604/14339] CXX v8_snapshot/obj/v8/v8_base/ast-expression-rewriter.o
后来搜到这样一篇文章：
https://kernel.moe/index.php/507.html
然后使用free命令，确认的确是内存不够导致的（给虚拟机分配了3G内存）。
于是设置并开启交换分区，解决了这个问题。
